<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DockingLibrary">

    <Style x:Key="DockingMenuItemStyle"
           TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static local:DockingBrushes.MenuItemBorder}}"/>
        <Setter Property="Foreground"
                 Value="{DynamicResource {x:Static local:DockingBrushes.MenuItemForeground}}"/>
        <Setter Property="Background"
                 Value="{DynamicResource {x:Static local:DockingBrushes.MenuItemBackground}}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                            CornerRadius="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}"
                            BorderThickness="1">
                        <Grid x:Name="grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="MenuItemIconColumnGroup"
                                                  x:Name="IconColumn"/>
                                <ColumnDefinition Width="*"
                                                  x:Name="ContentColumn"/>
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="Auto"
                                                  x:Name="ArrowColumn"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Grid.Column="0"
                                              Margin="0"
                                              x:Name="Icon"
                                              VerticalAlignment="Center"
                                              ContentSource="Icon"/>

                            <ContentPresenter Grid.Column="1"
                                              Margin="0"
                                              x:Name="HeaderHost"
                                              RecognizesAccessKey="True"
                                              ContentSource="Header"/>
                            <Grid Grid.Column="3" Margin="0"
                                  x:Name="ArrowPanel"
                                  VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath"
                                      VerticalAlignment="Center"
                                      Fill="{TemplateBinding Foreground}"
                                      Data="M0,0 L0,8 L4,4 z"/>
                            </Grid>

                            <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   x:Name="SubMenuPopup"
                                   Focusable="false"
                                   AllowsTransparency="true"
                                   VerticalOffset="1"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder"
                                            Background="{DynamicResource {x:Static local:DockingBrushes.MenuPopupBackground}}"
                                            BorderBrush="{DynamicResource {x:Static local:DockingBrushes.MenuPopupBorder}}"
                                            BorderThickness="1">

                                        <Rectangle Fill="{DynamicResource {x:Static local:DockingBrushes.MenuPopupIconColumnBackground}}"
                                                   HorizontalAlignment="Left"
                                                   Width="27"/>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    Grid.IsSharedSizeScope="true"
                                                    Margin="2"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </Popup>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="10,1"/>
                            <Setter Property="HorizontalOffset" Value="-10" TargetName="SubMenuPopup"/>
                            <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="4,2"/>
                            <Setter Property="HorizontalOffset" Value="-4" TargetName="SubMenuPopup"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="10,2"/>
                            <Setter Property="HorizontalOffset" Value="0" TargetName="SubMenuPopup"/>
                            <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                            <Setter Property="MinWidth" Value="20" TargetName="IconColumn"/>
                            <Setter Property="MinWidth" Value="13" TargetName="ArrowColumn"/>
                            <Setter Property="MinWidth" Value="100" TargetName="ContentColumn"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="10,2"/>
                            <Setter Property="HorizontalOffset" Value="0" TargetName="SubMenuPopup"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            <Setter Property="MinWidth" Value="20" TargetName="IconColumn"/>
                            <Setter Property="MinWidth" Value="13" TargetName="ArrowColumn"/>
                            <Setter Property="MinWidth" Value="100" TargetName="ContentColumn"/>
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                            <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu"/>
                            <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu"/>
                            <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static local:DockingBrushes.MenuItemMouseOverBackground}}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static local:DockingBrushes.MenuItemMouseOverBorder}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static local:DockingBrushes.MenuItemMouseOverForeground}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static local:DockingBrushes.MenuItemPressedBackground}}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static local:DockingBrushes.MenuItemPressedBorder}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static local:DockingBrushes.MenuItemPressedForeground}}"/>
                        </Trigger>
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static local:DockingBrushes.MenuItemSubmenuOpenBackground}}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static local:DockingBrushes.MenuItemSubmenuOpenBorder}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static local:DockingBrushes.MenuItemSubmenuOpenForeground}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>